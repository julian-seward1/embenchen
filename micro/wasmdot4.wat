(module
      (memory (export "mem") 100)
      (func $dummy)
      (global $mm (mut i32) (i32.const 0))
      (global $nn (mut i32) (i32.const 0))
      (global $ll (mut i32) (i32.const 0))
      (func $dot (export "dot") (result f64)
        (local $m i32)
        (local $n i32)
        (local $len i32)
        (local $sum f64)
        (local $iter i32)
        (call $dummy)

        (local.set $iter (i32.const 1000))
        (local.set $m (global.get $mm))
        (local.set $n (global.get $nn))
        (local.set $len (global.get $ll))
        (loop $AGAIN
          (if (local.get $len)
              (loop $L
                (local.set $sum
                  (f64.add (local.get $sum)
                           (f64.mul (f64.load (local.get $m)) (f64.load (local.get $n)))))
                (local.set $m (i32.add (local.get $m) (i32.const 8)))
                (local.set $n (i32.add (local.get $n) (i32.const 8)))
                (local.set $len (i32.sub (local.get $len) (i32.const 1)))
                (br_if $L (local.get $len))))
          (local.set $iter (i32.sub (local.get $iter) (i32.const 1)))
          (local.set $m (global.get $mm))
          (local.set $n (global.get $nn))
          (local.set $len (global.get $ll))
          (br_if $AGAIN (local.get $iter)))
        (local.get $sum)))